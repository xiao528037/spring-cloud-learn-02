server:
  port: 8802
spring:
  application:
    name: cloud-stream-consumer
  cloud:
    function:
      definition: myBroadcast;myGroup # 必须和处理消息的Bean的名字一样
    stream:
      bindings:
        # 广播消息
        myBroadcast-in-0: # 生产者绑定名称，myBroadcast是自定义的绑定名称，out代表生产者，0是固定写法
          destination: my-broadcast-topic # 对应的真实exchange
          content-type: application/json
          binder: defaultRabbit
        # 分组消息
        myGroup-in-0:
          destination: my-group-topic
          group: my-group-1
          content-type: application/json
          binder: defaultRabbit
      binders:
        defaultRabbit:
          type: rabbit
          environment:
            spring:
              rabbitmq:
                host: localhost
                port: 5672
                username: aloneman
                password: aloneman
                virtual-host: learn_1

#  spring  cloud 相关配置
eureka:
  instance:
    # 在注册中心的实例名字
    instance-id: stream-rabbitmq-consumer8802
    # 访问路径可以现实IP地址
    prefer-ip-address: true
    # 向注册中心发送心跳的间隔
    lease-renewal-interval-in-seconds: 30
    # 如果2秒没有获取到心跳则从注册中心删除
    lease-expiration-duration-in-seconds: 90
  client:
    #表示是否将自己注册进Eureka Server默认为true。
    register-with-eureka: true
    #是否从EurekaServer抓取已有的注册信息，默认为true。单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
    fetch-registry: true
    #向EurekaServer中注册
    service-url:
      defaultZone: http://eureka7001.local:7001/eureka,http://eureka7002.local:7002/eureka